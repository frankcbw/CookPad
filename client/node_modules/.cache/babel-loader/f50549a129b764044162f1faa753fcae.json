{"ast":null,"code":"import _regeneratorRuntime from\"/Users/FrankChen/csc309/tp/team07/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/FrankChen/csc309/tp/team07/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from\"axios\";// send a request to check if a user is logged in through the session cookie\nexport var checkSession=function checkSession(app){var url=\"/users/check-session\";fetch(url).then(function(res){if(res.status===200){return res.json();}}).then(function(json){if(json&&json.currentUser){app.setState({currentUser:json.currentUser});}}).catch(function(error){console.log(error);});};// a function to send a POST request with the user to be logged in\nexport var login=function login(loginComp,app){var request=new Request(\"users/login\",{method:\"post\",body:JSON.stringify(loginComp.state),headers:{Accept:\"application/json, text/plain, */*\",\"Content-Type\":\"application/json\"}});fetch(request).then(function(res){if(res.status===200){return res.json();}}).then(function(json){console.log(json);if(json.currentUser!==undefined){app.setState({currentUser:json.currentUser});}}).catch(function(error){alert(\"Username does not exist or Password does not match!\");console.log(error);});};// A function to send a GET request to logout the current user\nexport var logout=function logout(app){var url=\"/users/logout\";fetch(url).then(function(res){app.setState({currentUser:null,message:{type:\"\",body:\"\"}});}).catch(function(error){console.log(error);});};// A function to send a POST request to signup a user\nexport var signup=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(signupComp){var formData,newUser,res0;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:// create our request constructor with all the parameters we need\nformData=new FormData();formData.append('file',signupComp.state.profilePic);console.log(formData);_context.prev=3;newUser=signupComp.state;if(!signupComp.state.profilePic){_context.next=12;break;}_context.next=8;return axios.post('/images',formData,{headers:{'Content-Type':'multipart/form-data'}});case 8:res0=_context.sent;console.log(res0.data);newUser.imageUrl=res0.data.imageUrl;newUser.imageId=res0.data.imageId;case 12:_context.next=14;return axios.post(\"/api/users\",newUser);case 14:alert(\"Signed up successfully!\");signupComp.props.history.push(\"/login\");_context.next=22;break;case 18:_context.prev=18;_context.t0=_context[\"catch\"](3);alert(\"Username already exist please try again!\");console.log(_context.t0);case 22:case\"end\":return _context.stop();}}},_callee,null,[[3,18]]);}));return function signup(_x){return _ref.apply(this,arguments);};}();// A function to send a GET request to get all users\nexport var getAllUser=function getAllUser(userListComp){var request=new Request(\"/api/users\",{method:\"get\",headers:{Accept:\"application/json, text/plain, */*\",\"Content-Type\":\"application/json\"}});fetch(request).then(function(res){if(res.status===200){return res.json();}}).then(function(json){console.log(json);var users=[];for(var user in json){users.push(json[user]);}console.log(users);userListComp.setState({users:users});}).catch(function(error){console.log(error);});};// A function to send a GET request to get one user\nexport var getUser=function getUser(viewProfileComp,callback){var request=new Request(\"/api/users/\".concat(viewProfileComp.state.uid),{method:\"get\",headers:{Accept:\"application/json, text/plain, */*\",\"Content-Type\":\"application/json\"}});fetch(request).then(function(res){if(res.status===200){return res.json();}}).then(function(json){console.log(json);viewProfileComp.setState({user:json});}).then(function(){callback();}).catch(function(error){console.log(error);});};// a function to send a POST request to update image and a PATCH requset to update user profile\nexport var updateUser=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(comp,updateInfo,callback){var formData,res0,res1;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;if(!updateInfo.profilePic){_context2.next=11;break;}formData=new FormData();formData.append('file',updateInfo.profilePic);_context2.next=6;return axios.post('/images',formData,{headers:{'Content-Type':'multipart/form-data'}});case 6:res0=_context2.sent;updateInfo.imageUrl=res0.data.imageUrl;updateInfo.imageId=res0.data.imageId;comp.state.user.imageUrl=updateInfo.imageUrl;comp.state.user.imageId=updateInfo.imageId;case 11:_context2.next=13;return axios.patch(\"/api/users/\".concat(comp.state.uid),updateInfo);case 13:res1=_context2.sent;console.log(res1);callback(comp);_context2.next=21;break;case 18:_context2.prev=18;_context2.t0=_context2[\"catch\"](0);console.log(_context2.t0);case 21:case\"end\":return _context2.stop();}}},_callee2,null,[[0,18]]);}));return function updateUser(_x2,_x3,_x4){return _ref2.apply(this,arguments);};}();// a function to send a promote a regular user to admin\nexport var promoteUser=function promoteUser(uid){var request=new Request(\"/api/users/\".concat(uid),{method:\"PATCH\",body:JSON.stringify({isAdmin:true}),headers:{Accept:\"application/json, text/plain, */*\",\"Content-Type\":\"application/json\"}});fetch(request).then(function(res){if(res.status===200){return res.json();}}).then(function(json){console.log(json);}).catch(function(error){console.log(error);});};// A function to send a DELETE requset to delete user\nexport var deleteUser=function deleteUser(uid){var request=new Request(\"/api/users/\".concat(uid),{method:\"delete\",body:JSON.stringify({deleteUser:true}),headers:{Accept:\"application/json, text/plain, */*\",\"Content-Type\":\"application/json\"}});fetch(request).then(function(res){if(res.status===200){return res.json();}}).then(function(json){console.log(json);}).catch(function(error){console.log(error);});};","map":{"version":3,"sources":["/Users/FrankChen/csc309/tp/team07/client/src/actions/user.js"],"names":["axios","checkSession","app","url","fetch","then","res","status","json","currentUser","setState","catch","error","console","log","login","loginComp","request","Request","method","body","JSON","stringify","state","headers","Accept","undefined","alert","logout","message","type","signup","signupComp","formData","FormData","append","profilePic","newUser","post","res0","data","imageUrl","imageId","props","history","push","getAllUser","userListComp","users","user","getUser","viewProfileComp","callback","uid","updateUser","comp","updateInfo","patch","res1","promoteUser","isAdmin","deleteUser"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\n// send a request to check if a user is logged in through the session cookie\nexport const checkSession = (app) => {\n    const url = \"/users/check-session\";\n    fetch(url)\n        .then(res => {\n            if (res.status === 200) {\n                return res.json();\n            }\n        })\n        .then(json => {\n            if (json && json.currentUser) {\n                app.setState({ currentUser: json.currentUser });\n            }\n        })\n        .catch(error => {\n            console.log(error);\n        });\n};\n\n// a function to send a POST request with the user to be logged in\nexport const login = (loginComp, app) => {\n    const request = new Request(\"users/login\", {\n        method: \"post\",\n        body: JSON.stringify(loginComp.state),\n        headers: {\n            Accept: \"application/json, text/plain, */*\",\n            \"Content-Type\": \"application/json\"\n        }\n    })\n\n    fetch(request)\n        .then(res=>{\n            if(res.status === 200){\n                return res.json();\n            }\n        })\n        .then(json=>{\n            console.log(json)\n            if(json.currentUser !== undefined){\n                app.setState({ currentUser: json.currentUser })\n            }\n        })\n        .catch(error=>{\n            alert(\"Username does not exist or Password does not match!\");\n            console.log(error);\n        })\n}\n\n// A function to send a GET request to logout the current user\nexport const logout = (app) => {\n    const url = \"/users/logout\";\n\n    fetch(url)\n        .then(res => {\n            app.setState({\n                currentUser: null,\n                message: { type: \"\", body: \"\" }\n            });\n        })\n        .catch(error => {\n            console.log(error);\n        });\n};\n\n// A function to send a POST request to signup a user\nexport const signup = async(signupComp) => {\n    // create our request constructor with all the parameters we need\n    const formData = new FormData();   \n    formData.append('file', signupComp.state.profilePic);\n    \n    console.log(formData)\n    try {\n        const newUser = signupComp.state\n        if (signupComp.state.profilePic){\n            const res0 = await axios.post('/images', formData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            })\n            console.log(res0.data)\n            newUser.imageUrl = res0.data.imageUrl\n            newUser.imageId = res0.data.imageId\n        }\n        await axios.post(\"/api/users\", newUser)\n        alert(\"Signed up successfully!\");\n        signupComp.props.history.push(\"/login\");\n    } catch(error) {\n        alert(\"Username already exist please try again!\");\n        console.log(error)\n    }    \n}\n\n// A function to send a GET request to get all users\nexport const getAllUser = (userListComp) => {\n    const request = new Request(\"/api/users\", {\n        method: \"get\",\n        headers: {\n            Accept: \"application/json, text/plain, */*\",\n            \"Content-Type\": \"application/json\"\n        }\n    })\n\n    fetch(request)\n        .then(res=>{\n            if(res.status === 200){\n                return res.json();\n            }\n        })\n        .then(json=>{\n            console.log(json)\n            const users = []\n            for (let user in json){\n                users.push(json[user])\n            }\n            console.log(users)\n            userListComp.setState({users: users})\n            \n        })\n        .catch(error=>{\n            console.log(error);\n        })\n}\n\n// A function to send a GET request to get one user\nexport const getUser = (viewProfileComp, callback) => {\n    const request = new Request(`/api/users/${viewProfileComp.state.uid}`, {\n        method: \"get\",\n        headers: {\n            Accept: \"application/json, text/plain, */*\",\n            \"Content-Type\": \"application/json\"\n        }\n    })\n\n    fetch(request)\n        .then(res=>{\n            if(res.status === 200){\n                return res.json();\n            }\n        })\n        .then(json=>{\n            console.log(json)\n            viewProfileComp.setState({user: json})\n            \n        })\n        .then(()=>{\n            callback()\n        })\n        .catch(error=>{\n            console.log(error);\n        })\n\n}\n\n// a function to send a POST request to update image and a PATCH requset to update user profile\nexport const updateUser = async(comp, updateInfo, callback) => {\n    try {\n        if (updateInfo.profilePic){\n            const formData = new FormData();   \n            formData.append('file', updateInfo.profilePic);\n    \n            \n            const res0 = await axios.post('/images', formData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            })\n            updateInfo.imageUrl = res0.data.imageUrl\n            updateInfo.imageId = res0.data.imageId\n            comp.state.user.imageUrl = updateInfo.imageUrl\n            comp.state.user.imageId = updateInfo.imageId\n            \n        }\n        const res1 = await axios.patch(`/api/users/${comp.state.uid}`, updateInfo)\n        console.log(res1)\n        callback(comp)\n    } catch (error){\n        console.log(error)\n    }\n}\n\n// a function to send a promote a regular user to admin\nexport const promoteUser = (uid) => {\n    const request = new Request(`/api/users/${uid}`, {\n        method: \"PATCH\",\n        body: JSON.stringify({isAdmin: true}),\n        headers: {\n            Accept: \"application/json, text/plain, */*\",\n            \"Content-Type\": \"application/json\"\n        }\n    })\n\n    fetch(request)\n        .then(res=>{\n            if(res.status === 200){\n                return res.json();\n            }\n        })\n        .then(json=>{\n            console.log(json)\n        })\n        .catch(error=>{\n            console.log(error);\n        })\n}\n\n// A function to send a DELETE requset to delete user\nexport const deleteUser = (uid) => {\n    const request = new Request(`/api/users/${uid}`, {\n        method: \"delete\",\n        body: JSON.stringify({deleteUser: true}),\n        headers: {\n            Accept: \"application/json, text/plain, */*\",\n            \"Content-Type\": \"application/json\"\n        }\n    })\n\n    fetch(request)\n        .then(res=>{\n            if(res.status === 200){\n                return res.json();\n            }\n        })\n        .then(json=>{\n            console.log(json)\n        })\n        .catch(error=>{\n            console.log(error);\n        })\n}\n"]},"metadata":{},"sourceType":"module"}