{"ast":null,"code":"import axios from\"axios\";export var getMyRecipe=function getMyRecipe(viewProfileComp){var myRecipes=[];console.log(viewProfileComp.state.user);viewProfileComp.state.user.myRecipes.forEach(function(rid){var request=new Request(\"/api/recipes/\".concat(rid),{method:\"get\",headers:{Accept:\"application/json, text/plain, */*\",\"Content-Type\":\"application/json\"}});fetch(request).then(function(res){if(res.status===200){return res.json();}}).then(function(json){console.log(json);myRecipes.push(json);}).catch(function(error){console.log(error);});});viewProfileComp.setState({recipes:myRecipes});};export var getMyCollection=function getMyCollection(viewProfileComp){var myCollectedRecipes=[];viewProfileComp.state.user.collectedRecipes.forEach(function(rid){var request=new Request(\"/api/recipes/\".concat(rid),{method:\"get\",headers:{Accept:\"application/json, text/plain, */*\",\"Content-Type\":\"application/json\"}});fetch(request).then(function(res){if(res.status===200){return res.json();}}).then(function(json){console.log(json);myCollectedRecipes.push(json);}).catch(function(error){console.log(error);});});viewProfileComp.setState({collectedRecipes:myCollectedRecipes});};export var addRecipe=function addRecipe(newRecipeComp){var newRecipe={};newRecipe.creatorId=newRecipeComp.state.creatorId;newRecipe.creatorUsername=newRecipeComp.state.creatorUsername;newRecipe.name=newRecipeComp.state.name;if(newRecipeComp.state.description==null){newRecipe.description=\"none\";}else{newRecipe.description=newRecipeComp.state.description;}newRecipe.categories=newRecipeComp.state.categories;newRecipe.ingredients=newRecipeComp.state.ingredients;newRecipe.steps=newRecipeComp.state.steps;if(newRecipeComp.state.filePath==null){newRecipe.filePath=\"none\";}else{newRecipe.filePath=newRecipeComp.state.filePath;}console.log(\"state ready to send a request:\");console.log(newRecipe);axios.post('/api/recipes/',newRecipe).then(function(res){return console.log(res.data);});};export var getRecipe=function getRecipe(comp,rid){var request=new Request(\"/api/recipes/\".concat(rid),{method:\"get\",headers:{Accept:\"application/json, text/plain, */*\",\"Content-Type\":\"application/json\"}});fetch(request).then(function(res){if(res.status===200){return res.json();}}).then(function(json){console.log(json);comp.setState({recipe:json});}).catch(function(error){console.log(error);});};export var deleteRecipe=function deleteRecipe(rid){var request=new Request(\"/api/recipes/\".concat(rid),{method:\"delete\",headers:{Accept:\"application/json, text/plain, */*\",\"Content-Type\":\"application/json\"}});fetch(request).then(function(res){if(res.status===200){return res.json();}}).then(function(json){console.log(json);}).catch(function(error){console.log(error);});};export var getAllRecipes=function getAllRecipes(comp){var request=new Request(\"/api/recipes\",{method:\"get\",headers:{Accept:\"application/json, text/plain, */*\",\"Content-Type\":\"application/json\"}});fetch(request).then(function(res){if(res.status===200){return res.json();}}).then(function(json){console.log(json);comp.setState({recipes:json.recipes});comp.setState({displayed_recipes:json.recipes});// update top three recipes\nvar first_largest=-1;var second_largest=-1;var third_largest=-1;var first_idx=-1;var second_idx=-1;var third_idx=-1;for(var i=0;i<json.recipes.length;i++){if(json.recipes[i].likes>first_largest){third_largest=second_largest;second_largest=first_largest;first_largest=json.recipes[i].likes;first_idx=i;}else if(json.recipes[i].likes>second_largest){third_largest=second_largest;second_largest=json.recipes[i].likes;second_idx=i;}else if(json.recipes[i].likes>third_largest){third_largest=json.recipes[i].likes;third_idx=i;}}comp.setState({top3_recipe:[first_idx,second_idx,third_idx]});console.log(comp.state.top3_recipe);}).catch(function(error){console.log(error);});};export var getTopRecipes=function getTopRecipes(){};// set a recipe field \nexport var setRecipe=function setRecipe(rid,newRecipe){// const request = new Request(`/api/recipes/${rid}`, {\n//     method: \"post\",\n//     body: JSON.stringify(newRecipe),\n//     headers: {\n//         Accept: \"application/json, text/plain, */*\",\n//         'Content-Type': 'multipart/form-data'\n//     }\n// })\naxios.patch(\"/api/recipes/\".concat(rid),newRecipe).then(function(res){return console.log(res.data);});// console.log(request)\n// send the request with fetch()\n// fetch(request)\n//     .then(res=>{\n//         if(res.status === 200){\n//             return res.json();\n//         }\n//     })\n//     .then(json=>{\n//         console.log(json)\n//     })\n//     .catch(error=>{\n//         console.log(error);\n//     })\n};","map":{"version":3,"sources":["/Users/FrankChen/csc309/tp/team07/client/src/actions/recipe.js"],"names":["axios","getMyRecipe","viewProfileComp","myRecipes","console","log","state","user","forEach","rid","request","Request","method","headers","Accept","fetch","then","res","status","json","push","catch","error","setState","recipes","getMyCollection","myCollectedRecipes","collectedRecipes","addRecipe","newRecipeComp","newRecipe","creatorId","creatorUsername","name","description","categories","ingredients","steps","filePath","post","data","getRecipe","comp","recipe","deleteRecipe","getAllRecipes","displayed_recipes","first_largest","second_largest","third_largest","first_idx","second_idx","third_idx","i","length","likes","top3_recipe","getTopRecipes","setRecipe","patch"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nexport const getMyRecipe = (viewProfileComp) => {\n    const myRecipes = []\n    console.log(viewProfileComp.state.user)\n    viewProfileComp.state.user.myRecipes.forEach(rid => {\n        const request = new Request(`/api/recipes/${rid}`, {\n            method: \"get\",\n            headers: {\n                Accept: \"application/json, text/plain, */*\",\n                \"Content-Type\": \"application/json\"\n            }\n        })\n    \n        fetch(request)\n            .then(res=>{\n                if(res.status === 200){\n                    return res.json();\n                }\n            })\n            .then(json=>{\n                console.log(json)\n                myRecipes.push(json)\n            })\n            .catch(error=>{\n                console.log(error);\n            })\n        \n    });\n    viewProfileComp.setState({recipes: myRecipes})  \n}\n\nexport const getMyCollection = (viewProfileComp) => {\n    const myCollectedRecipes = []\n    viewProfileComp.state.user.collectedRecipes.forEach(rid => {\n        const request = new Request(`/api/recipes/${rid}`, {\n            method: \"get\",\n            headers: {\n                Accept: \"application/json, text/plain, */*\",\n                \"Content-Type\": \"application/json\"\n            }\n        })\n    \n        fetch(request)\n            .then(res=>{\n                if(res.status === 200){\n                    return res.json();\n                }\n            })\n            .then(json=>{\n                console.log(json)\n                myCollectedRecipes.push(json)\n            })\n            .catch(error=>{\n                console.log(error);\n            })\n        \n    });\n    viewProfileComp.setState({collectedRecipes: myCollectedRecipes})\n}\n\n\nexport const addRecipe = (newRecipeComp) => {\n    const newRecipe = {};\n    newRecipe.creatorId = newRecipeComp.state.creatorId;\n    newRecipe.creatorUsername = newRecipeComp.state.creatorUsername;\n    newRecipe.name = newRecipeComp.state.name;\n    if(newRecipeComp.state.description == null){\n        newRecipe.description = \"none\";\n    }else{\n        newRecipe.description = newRecipeComp.state.description;\n    }\n    newRecipe.categories = newRecipeComp.state.categories;\n    newRecipe.ingredients = newRecipeComp.state.ingredients;\n    newRecipe.steps = newRecipeComp.state.steps;\n    if(newRecipeComp.state.filePath == null){\n        newRecipe.filePath = \"none\";\n    }else{\n        newRecipe.filePath = newRecipeComp.state.filePath;\n    }\n\n    console.log(\"state ready to send a request:\");\n    console.log(newRecipe);\n\n\n    axios.post('/api/recipes/', newRecipe)\n        .then(res => console.log(res.data));\n   \n}\n\nexport const getRecipe = (comp, rid) => {\n    const request = new Request(`/api/recipes/${rid}`, {\n        method: \"get\",\n        headers: {\n            Accept: \"application/json, text/plain, */*\",\n            \"Content-Type\": \"application/json\"\n        }\n    })\n\n    fetch(request)\n        .then(res=>{\n            if(res.status === 200){\n                return res.json();\n            }\n        })\n        .then(json=>{\n            console.log(json)\n            comp.setState({recipe: json})\n        })\n        .catch(error=>{\n            console.log(error);\n        })\n}\n\nexport const deleteRecipe = (rid) => {\n    const request = new Request(`/api/recipes/${rid}`, {\n        method: \"delete\",\n        headers: {\n            Accept: \"application/json, text/plain, */*\",\n            \"Content-Type\": \"application/json\"\n        }\n    })\n\n    fetch(request)\n        .then(res=>{\n            if(res.status === 200){\n                return res.json();\n            }\n        })\n        .then(json=>{\n            console.log(json)\n        })\n        .catch(error=>{\n            console.log(error);\n        })\n}\n\nexport const getAllRecipes = (comp)=>{\n    const request = new Request(`/api/recipes`, {\n        method: \"get\",\n        headers: {\n            Accept: \"application/json, text/plain, */*\",\n            \"Content-Type\": \"application/json\"\n        }\n    })\n\n    fetch(request)\n        .then(res=>{\n            if(res.status === 200){\n                return res.json();\n            }\n        })\n        .then(json=>{\n            console.log(json)\n            comp.setState({recipes: json.recipes})\n            comp.setState({displayed_recipes: json.recipes})\n            \n            // update top three recipes\n            let first_largest = -1;\n            let second_largest = -1;\n            let third_largest = -1;\n            let first_idx = -1;\n            let second_idx = -1;\n            let third_idx = -1;\n            for(let i=0; i< json.recipes.length; i++){\n                if(json.recipes[i].likes > first_largest){\n                    third_largest = second_largest;\n                    second_largest = first_largest;\n                    first_largest = json.recipes[i].likes;\n                    first_idx = i;\n                }else if(json.recipes[i].likes > second_largest){\n                    third_largest = second_largest;\n                    second_largest = json.recipes[i].likes;\n                    second_idx = i;\n                }else if(json.recipes[i].likes > third_largest){\n                    third_largest = json.recipes[i].likes;\n                    third_idx = i;\n                }\n            }\n            comp.setState({ top3_recipe: [first_idx, second_idx, third_idx]})\n            console.log(comp.state.top3_recipe)\n        })\n        .catch(error=>{\n            console.log(error);\n        })\n}\n\nexport const getTopRecipes = () => {\n\n}\n\n// set a recipe field \nexport const setRecipe = (rid, newRecipe) => {\n    // const request = new Request(`/api/recipes/${rid}`, {\n    //     method: \"post\",\n    //     body: JSON.stringify(newRecipe),\n    //     headers: {\n    //         Accept: \"application/json, text/plain, */*\",\n    //         'Content-Type': 'multipart/form-data'\n    //     }\n    // })\n\n    axios.patch(`/api/recipes/${rid}`, newRecipe)\n    .then(res => console.log(res.data));\n    // console.log(request)\n    // send the request with fetch()\n    // fetch(request)\n    //     .then(res=>{\n    //         if(res.status === 200){\n    //             return res.json();\n    //         }\n    //     })\n    //     .then(json=>{\n    //         console.log(json)\n    //     })\n    //     .catch(error=>{\n    //         console.log(error);\n    //     })\n}\n"]},"metadata":{},"sourceType":"module"}