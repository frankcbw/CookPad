{"ast":null,"code":"// send a request to check if a user is logged in through the session cookie\nexport var checkSession=function checkSession(app){var url=\"/users/check-session\";fetch(url).then(function(res){if(res.status===200){return res.json();}}).then(function(json){if(json&&json.currentUser){app.setState({currentUser:json.currentUser});}}).catch(function(error){console.log(error);});};// a function to send a POST request with the user to be logged in\nexport var login=function login(loginComp,app){// create our request constructor with all the parameters we need\nvar request=new Request(\"users/login\",{method:\"post\",body:JSON.stringify(loginComp.state),headers:{Accept:\"application/json, text/plain, */*\",\"Content-Type\":\"application/json\"}});// send the request with fetch()\nfetch(request).then(function(res){if(res.status===200){return res.json();}}).then(function(json){console.log(json);if(json.currentUser!==undefined){app.setState({currentUser:json.currentUser});}}).catch(function(error){alert(\"Username does not exist or Password does not match!\");console.log(error);});};// A function to send a GET request to logout the current user\nexport var logout=function logout(app){var url=\"/users/logout\";fetch(url).then(function(res){app.setState({currentUser:null,message:{type:\"\",body:\"\"}});}).catch(function(error){console.log(error);});};export var signup=function signup(signupComp){// create our request constructor with all the parameters we need\nvar request=new Request(\"/api/users\",{method:\"post\",body:JSON.stringify(signupComp.state),headers:{Accept:\"application/json, text/plain, */*\",\"Content-Type\":\"application/json\"}});// send the request with fetch()\nfetch(request).then(function(res){if(res.status===200){return res.json();}}).then(function(json){console.log(json);alert(\"Sign up success!\");}).catch(function(error){alert(\"Could not Sign up!\");console.log(error);});};export var getAllUser=function getAllUser(adminComp){var request=new Request(\"/api/users\",{method:\"get\",headers:{Accept:\"application/json, text/plain, */*\",\"Content-Type\":\"application/json\"}});fetch(request).then(function(res){if(res.status===200){return res.json();}}).then(function(json){console.log(json);var users=[];for(var user in json){users.push(json[user]);}console.log(users);adminComp.setState({users:users});}).catch(function(error){console.log(error);});};export var getUser=function getUser(viewProfileComp,callback){var request=new Request(\"/api/users/\".concat(viewProfileComp.state.uid),{method:\"get\",headers:{Accept:\"application/json, text/plain, */*\",\"Content-Type\":\"application/json\"}});fetch(request).then(function(res){if(res.status===200){return res.json();}}).then(function(json){console.log(json);viewProfileComp.setState({user:json});}).then(function(){callback();}).catch(function(error){console.log(error);});};// modify recipe list of the user\n/*\nadd a new recipe to recipe lists\n{\n    \"likedRecipes\": <rid>,\n    \"collectedRecipes\": <rid>,\n    \"myRecipes\": <rid>\n}\n*/export var addToRecipeList=function addToRecipeList(uid,recipeList){// create our request constructor with all the parameters we need\nvar request=new Request(\"/api/users/\".concat(uid),{method:\"post\",body:JSON.stringify(recipeList),headers:{Accept:\"application/json, text/plain, */*\",\"Content-Type\":\"application/json\"}});console.log(request);// send the request with fetch()\nfetch(request).then(function(res){if(res.status===200){return res.json();}}).then(function(json){console.log(json);}).catch(function(error){console.log(error);});};/*\ndelete a new recipe to recipe lists\n{\n    \"likedRecipes\": <rid>,\n    \"collectedRecipes\": <rid>,\n    \"myRecipes\": <rid>\n}\n*/export var DeleteFromRecipeList=function DeleteFromRecipeList(uid,recipeList){// create our request constructor with all the parameters we need\nvar request=new Request(\"/api/users/\".concat(uid),{method:\"delete\",body:JSON.stringify(recipeList),headers:{Accept:\"application/json, text/plain, */*\",\"Content-Type\":\"application/json\"}});// send the request with fetch()\nfetch(request).then(function(res){if(res.status===200){return res.json();}}).then(function(json){console.log(json);}).catch(function(error){console.log(error);});};export var updateUser=function updateUser(uid,updateInfo){var request=new Request(\"/api/users/\".concat(uid),{method:\"PATCH\",body:JSON.stringify(updateInfo),headers:{Accept:\"application/json, text/plain, */*\",\"Content-Type\":\"application/json\"}});fetch(request).then(function(res){if(res.status===200){return res.json();}}).then(function(json){console.log(json);}).catch(function(error){console.log(error);});};","map":{"version":3,"sources":["/Users/FrankChen/csc309/tp/team07/client/src/actions/user.js"],"names":["checkSession","app","url","fetch","then","res","status","json","currentUser","setState","catch","error","console","log","login","loginComp","request","Request","method","body","JSON","stringify","state","headers","Accept","undefined","alert","logout","message","type","signup","signupComp","getAllUser","adminComp","users","user","push","getUser","viewProfileComp","callback","uid","addToRecipeList","recipeList","DeleteFromRecipeList","updateUser","updateInfo"],"mappings":"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","sourcesContent":["// send a request to check if a user is logged in through the session cookie\nexport const checkSession = (app) => {\n    const url = \"/users/check-session\";\n    fetch(url)\n        .then(res => {\n            if (res.status === 200) {\n                return res.json();\n            }\n        })\n        .then(json => {\n            if (json && json.currentUser) {\n                app.setState({ currentUser: json.currentUser });\n            }\n        })\n        .catch(error => {\n            console.log(error);\n        });\n};\n\n// a function to send a POST request with the user to be logged in\nexport const login = (loginComp, app) => {\n    // create our request constructor with all the parameters we need\n    const request = new Request(\"users/login\", {\n        method: \"post\",\n        body: JSON.stringify(loginComp.state),\n        headers: {\n            Accept: \"application/json, text/plain, */*\",\n            \"Content-Type\": \"application/json\"\n        }\n    })\n\n    // send the request with fetch()\n    fetch(request)\n        .then(res=>{\n            if(res.status === 200){\n                return res.json();\n            }\n        })\n        .then(json=>{\n            console.log(json)\n            if(json.currentUser !== undefined){\n                app.setState({ currentUser: json.currentUser })\n            }\n        })\n        .catch(error=>{\n            alert(\"Username does not exist or Password does not match!\");\n            console.log(error);\n        })\n}\n\n// A function to send a GET request to logout the current user\nexport const logout = (app) => {\n    const url = \"/users/logout\";\n\n    fetch(url)\n        .then(res => {\n            app.setState({\n                currentUser: null,\n                message: { type: \"\", body: \"\" }\n            });\n        })\n        .catch(error => {\n            console.log(error);\n        });\n};\n\nexport const signup = (signupComp) => {\n    // create our request constructor with all the parameters we need\n    const request = new Request(\"/api/users\", {\n        method: \"post\",\n        body: JSON.stringify(signupComp.state),\n        headers: {\n            Accept: \"application/json, text/plain, */*\",\n            \"Content-Type\": \"application/json\"\n        }\n    })\n\n    // send the request with fetch()\n    fetch(request)\n        .then(res=>{\n            if(res.status === 200){\n                return res.json();\n            }\n        })\n        .then(json=>{\n            console.log(json)\n            alert(\"Sign up success!\");\n        })\n        .catch(error=>{\n            alert(\"Could not Sign up!\");\n            console.log(error);\n        })\n}\n\nexport const getAllUser = (adminComp) => {\n    const request = new Request(\"/api/users\", {\n        method: \"get\",\n        headers: {\n            Accept: \"application/json, text/plain, */*\",\n            \"Content-Type\": \"application/json\"\n        }\n    })\n\n    fetch(request)\n        .then(res=>{\n            if(res.status === 200){\n                return res.json();\n            }\n        })\n        .then(json=>{\n            console.log(json)\n            const users = []\n            for (let user in json){\n                users.push(json[user])\n            }\n            console.log(users)\n            adminComp.setState({users: users})\n            \n        })\n        .catch(error=>{\n            console.log(error);\n        })\n\n}\n\n\nexport const getUser = (viewProfileComp, callback) => {\n    const request = new Request(`/api/users/${viewProfileComp.state.uid}`, {\n        method: \"get\",\n        headers: {\n            Accept: \"application/json, text/plain, */*\",\n            \"Content-Type\": \"application/json\"\n        }\n    })\n\n    fetch(request)\n        .then(res=>{\n            if(res.status === 200){\n                return res.json();\n            }\n        })\n        .then(json=>{\n            console.log(json)\n            viewProfileComp.setState({user: json})\n            \n        })\n        .then(()=>{\n            callback()\n        })\n        .catch(error=>{\n            console.log(error);\n        })\n\n}\n\n// modify recipe list of the user\n/*\nadd a new recipe to recipe lists\n{\n    \"likedRecipes\": <rid>,\n    \"collectedRecipes\": <rid>,\n    \"myRecipes\": <rid>\n}\n*/\nexport const addToRecipeList = (uid, recipeList) => {\n    // create our request constructor with all the parameters we need\n    const request = new Request(`/api/users/${uid}`, {\n        method: \"post\",\n        body: JSON.stringify(recipeList),\n        headers: {\n            Accept: \"application/json, text/plain, */*\",\n            \"Content-Type\": \"application/json\"\n        }\n    })\n\n    console.log(request)\n    // send the request with fetch()\n    fetch(request)\n        .then(res=>{\n            if(res.status === 200){\n                return res.json();\n            }\n        })\n        .then(json=>{\n            console.log(json)\n        })\n        .catch(error=>{\n            console.log(error);\n        })\n}\n\n/*\ndelete a new recipe to recipe lists\n{\n    \"likedRecipes\": <rid>,\n    \"collectedRecipes\": <rid>,\n    \"myRecipes\": <rid>\n}\n*/\nexport const DeleteFromRecipeList = (uid, recipeList) => {\n    // create our request constructor with all the parameters we need\n    const request = new Request(`/api/users/${uid}`, {\n        method: \"delete\",\n        body: JSON.stringify(recipeList),\n        headers: {\n            Accept: \"application/json, text/plain, */*\",\n            \"Content-Type\": \"application/json\"\n        }\n    })\n\n    // send the request with fetch()\n    fetch(request)\n        .then(res=>{\n            if(res.status === 200){\n                return res.json();\n            }\n        })\n        .then(json=>{\n            console.log(json)\n        })\n        .catch(error=>{\n            console.log(error);\n        })\n}\n\nexport const updateUser = (uid, updateInfo) => {\n    const request = new Request(`/api/users/${uid}`, {\n        method: \"PATCH\",\n        body: JSON.stringify(updateInfo),\n        headers: {\n            Accept: \"application/json, text/plain, */*\",\n            \"Content-Type\": \"application/json\"\n        }\n    })\n\n    fetch(request)\n        .then(res=>{\n            if(res.status === 200){\n                return res.json();\n            }\n        })\n        .then(json=>{\n            console.log(json)\n        })\n        .catch(error=>{\n            console.log(error);\n        })\n}\n\n"]},"metadata":{},"sourceType":"module"}